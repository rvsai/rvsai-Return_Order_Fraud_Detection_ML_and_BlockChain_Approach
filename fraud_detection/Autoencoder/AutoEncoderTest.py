import numpy as npimport pandas as pdfrom tensorflow.keras.models import load_modelfrom sklearn.metrics import mean_squared_errordef load_data(file_path):    """ Load the test data """    data = pd.read_csv(file_path).values    return data.reshape((-1, data.shape[1], 1))  # Reshape data for the autoencoderdef predict_reconstruction_error(model, data):    """ Predict data using autoencoder and calculate the mean squared error """    predictions = model.predict(data)    predictions = predictions.reshape((-1, predictions.shape[1], 1))  # Adjust the shape    mse = np.mean(np.power(data - predictions, 2), axis=1)    return msedef main():    X_test = load_data('./data/X_test.csv')        # Load the pre-trained autoencoder model    model = load_model('autoencoder_model.h5')        # Calculate reconstruction errors    mse = predict_reconstruction_error(model, X_test)        print("MSE for each sample:", mse)if __name__ == "__main__":    main()