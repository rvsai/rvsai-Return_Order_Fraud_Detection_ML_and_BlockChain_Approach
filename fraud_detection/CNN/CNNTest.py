import numpy as npimport pandas as pdfrom tensorflow.keras.models import load_modelfrom tensorflow.keras.utils import to_categorical  # Ensure this is importedfrom sklearn.metrics import classification_report, confusion_matrix, accuracy_scoredef load_data():    X_test = pd.read_csv('./data_30F_70NF/X_test.csv').values    y_test = pd.read_csv('./data_30F_70NF/y_test.csv').values        # One-hot encode y_test if it's not already    y_test = to_categorical(y_test)        # Reshape X_test according to the correct feature number    X_test = X_test.reshape((-1, X_test.shape[1], 1))        return X_test, y_testdef evaluate_model(model_path):    model = load_model(model_path)        # Predictions    X_test, y_test = load_data()    predictions = model.predict(X_test)    predicted_classes = np.argmax(predictions, axis=1)    true_classes = np.argmax(y_test, axis=1)        # Evaluation metrics    accuracy = accuracy_score(true_classes, predicted_classes)    conf_matrix = confusion_matrix(true_classes, predicted_classes)    classif_report = classification_report(true_classes, predicted_classes)        print("Accuracy:", accuracy)    print("Confusion Matrix:\n", conf_matrix)    print("Classification Report:\n", classif_report)def main():    model_path = 'cnn_model_final.h5'  # Change to 'best_model.h5' if using HDF5 format    evaluate_model(model_path)if __name__ == "__main__":    main()