import numpy as npimport pandas as pdfrom xgboost import XGBClassifierfrom sklearn.metrics import accuracy_score, confusion_matrix, classification_reportimport matplotlib.pyplot as pltimport seaborn as sns# Load the trained XGBoost modelxgb_model = XGBClassifier()xgb_model.load_model('xgb_model.json')# Load the test dataX_test = pd.read_csv('./data_70F_30NF/X_test.csv').values  # Features dataset for testingy_test = pd.read_csv('./data_70F_30NF/y_test.csv').values.flatten()  # Fraud/Non-Fraud labels for testing# Make predictionsy_pred = xgb_model.predict(X_test)# Evaluate the modelaccuracy = accuracy_score(y_test, y_pred)conf_matrix = confusion_matrix(y_test, y_pred)class_report = classification_report(y_test, y_pred)# Print evaluation metricsprint(f"Accuracy: {accuracy}")print("Confusion Matrix:")print(conf_matrix)print("Classification Report:")print(class_report)# Visualization of the confusion matrix#plt.figure(figsize=(8, 6))##sns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues', xticklabels=['Non-Fraud', 'Fraud'], yticklabels=['Non-Fraud', 'Fraud'])#plt.xlabel('Predicted')#plt.ylabel('Actual')#plt.title('Confusion Matrix')#plt.show()